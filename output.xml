<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180208 12:06:41.207" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="C:\robot\TCG_Test\TCG\TestScenario6.robot" id="s1" name="TestScenario6">
<kw type="setup" name="Open Connection And Log In" library="Keywords">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HostIP}</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:41.626" starttime="20180208 12:06:41.626"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${HostUser}</arg>
<arg>${HostPass}</arg>
</arguments>
<msg timestamp="20180208 12:06:41.626" level="INFO">Logging into '10.251.87.85:22' as 'iistadm'.</msg>
<msg timestamp="20180208 12:06:43.002" level="INFO">Read output: Last unsuccessful login: Wed Feb  7 17:24:15 ICT 2018 on ssh from 10.4.31.250
Last login: Thu Feb  8 12:06:17 ICT 2018 on ssh from 10.4.31.250


******************************************************************************************************
WARNING:

This system is restricted to GSB authorized users for business purposes only.
Unauthorized access or use is a violation of laws and GSB security policy. This service may be 
monitored for administrative and security reasons.  By proceeding, you consent to this monitoring.

******************************************************************************************************
[YOU HAVE NEW MAIL]
cbssitdb:/gsbiist$</msg>
<status status="PASS" endtime="20180208 12:06:43.002" starttime="20180208 12:06:41.626"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:43.002" starttime="20180208 12:06:41.626"></status>
</kw>
<test id="s1-t1" name="Insert Sub - Project Code is Null">
<kw name="Copy File and Insert" library="Keywords">
<doc>Copy file to ftp and run get file and insert data to table</doc>
<arguments>
<arg>${File2}</arg>
<arg>${LogFile2}</arg>
<arg>${Table2}</arg>
</arguments>
<kw name="Remove file on FTP" library="Keywords">
<arguments>
<arg>${file}</arg>
<arg>${logFile}</arg>
</arguments>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "rm ${FTPPathTo}/${file}" &gt; ${TCGPath}/${SCRIPT_FILE_RM}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.002" level="INFO">Starting command 'echo "rm TCG/ToCBS/ZUTBLCOLSPRJ_20180208.txt" &gt; /gsbiist/spool/extract/TCG/rm_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.033" starttime="20180208 12:06:43.002"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "rm ${FTPPathFrom}/${logFile}" &gt;&gt; ${TCGPath}/${SCRIPT_FILE_RM}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.049" level="INFO">Starting command 'echo "rm TCG/FromCBS/ZUTBLCOLSPRJ_20180208.log" &gt;&gt; /gsbiist/spool/extract/TCG/rm_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.127" starttime="20180208 12:06:43.033"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "exit" &gt;&gt; ${TCGPath}/${SCRIPT_FILE_RM}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.127" level="INFO">Starting command 'echo "exit" &gt;&gt; /gsbiist/spool/extract/TCG/rm_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.221" starttime="20180208 12:06:43.127"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>sftp -b ${TCGPath}/${SCRIPT_FILE_RM} ${FTPHostUser}@${FTPIP}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.221" level="INFO">Starting command 'sftp -b /gsbiist/spool/extract/TCG/rm_ftp.txt cbsist@10.20.6.58'.</msg>
<status status="PASS" endtime="20180208 12:06:43.283" starttime="20180208 12:06:43.221"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${TCGPath}/${file}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.299" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/ZUTBLCOLSPRJ_20180208.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.362" starttime="20180208 12:06:43.299"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${CBSPathTo}/${file}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.362" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/ToCBS/ZUTBLCOLSPRJ_20180208.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.424" starttime="20180208 12:06:43.362"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${CBSPathFrom}/${logFile}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.440" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/FromCBS/ZUTBLCOLSPRJ_20180208.log'.</msg>
<status status="PASS" endtime="20180208 12:06:43.487" starttime="20180208 12:06:43.424"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${TCGPath}/${file}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.487" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/ZUTBLCOLSPRJ_20180208.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.612" starttime="20180208 12:06:43.487"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${TCGPath}/${SCRIPT_FILE_RM}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.612" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/rm_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.674" starttime="20180208 12:06:43.612"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>rm ${TCGPath}/${SCRIPT_FILE_PUT}</arg>
</arguments>
<msg timestamp="20180208 12:06:43.690" level="INFO">Starting command 'rm /gsbiist/spool/extract/TCG/put_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:43.768" starttime="20180208 12:06:43.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20180208 12:06:44.778" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20180208 12:06:44.778" starttime="20180208 12:06:43.768"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:44.778" starttime="20180208 12:06:43.002"></status>
</kw>
<kw name="Kill Globle DATA" library="Keywords">
<arguments>
<arg>${KeyGBL}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>dm</arg>
</arguments>
<msg timestamp="20180208 12:06:44.778" level="INFO">dm</msg>
<status status="PASS" endtime="20180208 12:06:44.778" starttime="20180208 12:06:44.778"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>k ^UTBL("${Key}")</arg>
</arguments>
<msg timestamp="20180208 12:06:44.794" level="INFO">k ^UTBL("ZCOLSPRJ")</msg>
<status status="PASS" endtime="20180208 12:06:44.794" starttime="20180208 12:06:44.794"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until `expected` is encountered.</doc>
<arguments>
<arg>GTM&gt;</arg>
</arguments>
<msg timestamp="20180208 12:06:45.013" level="INFO">GTM&gt;</msg>
<status status="PASS" endtime="20180208 12:06:45.013" starttime="20180208 12:06:44.794"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>H</arg>
</arguments>
<msg timestamp="20180208 12:06:45.028" level="INFO">=k[C$&lt;2&gt; [C$&lt;2&gt;^[C$&lt;2&gt;U[C$&lt;2&gt;T[C$&lt;2&gt;B[C$&lt;2&gt;L[C$&lt;2&gt;([C$&lt;2&gt;"[C$&lt;2&gt;Z[C$&lt;2&gt;C[C$&lt;2&gt;O[C$&lt;2&gt;L[C$&lt;2&gt;S[C$&lt;2&gt;P[C$&lt;2&gt;R[C$&lt;2&gt;J[C$&lt;2&gt;"[C$&lt;2&gt;)[C$&lt;2&gt;&gt;</msg>
<status status="PASS" endtime="20180208 12:06:45.028" starttime="20180208 12:06:45.028"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:45.028" starttime="20180208 12:06:44.778"></status>
</kw>
<kw name="Put file to Host" library="Keywords">
<arguments>
<arg>${file}</arg>
</arguments>
<kw name="Put File" library="SSHLibrary">
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<arguments>
<arg>${LocalPath}/${file}</arg>
<arg>${TCGPath}</arg>
</arguments>
<msg timestamp="20180208 12:06:45.075" level="INFO">[chan 11] Opened sftp connection (server version 3)</msg>
<msg timestamp="20180208 12:06:45.153" level="INFO">'file\06\ZUTBLCOLSPRJ_20180208.txt' -&gt; '/gsbiist/spool/extract/TCG/ZUTBLCOLSPRJ_20180208.txt'</msg>
<status status="PASS" endtime="20180208 12:06:45.153" starttime="20180208 12:06:45.044"></status>
</kw>
<kw name="File Should Exist" library="SSHLibrary">
<doc>Fails if the given `path` does NOT point to an existing file.</doc>
<arguments>
<arg>${TCGPath}/${file}</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:45.169" starttime="20180208 12:06:45.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20180208 12:06:46.169" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20180208 12:06:46.169" starttime="20180208 12:06:45.169"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:46.169" starttime="20180208 12:06:45.028"></status>
</kw>
<kw name="Put file to FTP" library="Keywords">
<arguments>
<arg>${file}</arg>
</arguments>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "lcd ${TCGPath}" &gt; ${TCGPath}/${SCRIPT_FILE_PUT}</arg>
</arguments>
<msg timestamp="20180208 12:06:46.169" level="INFO">Starting command 'echo "lcd /gsbiist/spool/extract/TCG" &gt; /gsbiist/spool/extract/TCG/put_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:46.185" starttime="20180208 12:06:46.169"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "put ${TCGPath}/${file} ${FTPPathTo}/${file}" &gt;&gt; ${TCGPath}/${SCRIPT_FILE_PUT}</arg>
</arguments>
<msg timestamp="20180208 12:06:46.200" level="INFO">Starting command 'echo "put /gsbiist/spool/extract/TCG/ZUTBLCOLSPRJ_20180208.txt TCG/ToCBS/ZUTBLCOLSPRJ_20180208.txt" &gt;&gt; /gsbiist/spool/extract/TCG/put_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:46.279" starttime="20180208 12:06:46.200"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>echo "exit" &gt;&gt; ${TCGPath}/${SCRIPT_FILE_PUT}</arg>
</arguments>
<msg timestamp="20180208 12:06:46.294" level="INFO">Starting command 'echo "exit" &gt;&gt; /gsbiist/spool/extract/TCG/put_ftp.txt'.</msg>
<status status="PASS" endtime="20180208 12:06:46.357" starttime="20180208 12:06:46.279"></status>
</kw>
<kw name="Start Command" library="SSHLibrary">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>sftp -b ${TCGPath}/${SCRIPT_FILE_PUT} ${FTPHostUser}@${FTPIP}</arg>
</arguments>
<msg timestamp="20180208 12:06:46.372" level="INFO">Starting command 'sftp -b /gsbiist/spool/extract/TCG/put_ftp.txt cbsist@10.20.6.58'.</msg>
<status status="PASS" endtime="20180208 12:06:46.404" starttime="20180208 12:06:46.372"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20180208 12:06:47.404" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20180208 12:06:47.404" starttime="20180208 12:06:46.404"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:47.404" starttime="20180208 12:06:46.169"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${Dir}/Batch/ZTCG_GET.sh ${Dir} ${table}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180208 12:06:47.404" level="INFO">Executing command '/gsbiist/Batch/ZTCG_GET.sh /gsbiist ZUTBLCOLSPRJ'.</msg>
<msg timestamp="20180208 12:06:47.857" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180208 12:06:47.857" level="INFO">${output} = Log : /tmp/ZTCG_GET_180208120638_IIST.log
/tmp/ZTCG_GET_180208120638_IIST.log
CONFIG_FILE: /gsbiist/Batch/Config/sftpserver_gsbiist.cfg
SCRIPT_FILE: /tmp/ZTCG_GET_180208120638_IIST.sftp
**************...</msg>
<status status="PASS" endtime="20180208 12:06:47.857" starttime="20180208 12:06:47.404"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${Dir}/Batch/ZTCG_RUN.sh ${Dir} ${table}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180208 12:06:47.857" level="INFO">Executing command '/gsbiist/Batch/ZTCG_RUN.sh /gsbiist ZUTBLCOLSPRJ'.</msg>
<msg timestamp="20180208 12:06:48.248" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180208 12:06:48.248" level="INFO">${output} = /tmp/ZTCG_180208120638_IIST.log
*****************************************************************
Start Date&amp;Time   = 18/02/08-12:06:38
Businesse         = 20180208
***********************************...</msg>
<status status="PASS" endtime="20180208 12:06:48.248" starttime="20180208 12:06:47.857"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:48.248" starttime="20180208 12:06:43.002"></status>
</kw>
<kw name="File Should Exist" library="SSHLibrary">
<doc>Fails if the given `path` does NOT point to an existing file.</doc>
<arguments>
<arg>${CBSPathFrom}/${LogFile2}</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:48.295" starttime="20180208 12:06:48.248"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cat ${CBSPathFrom}/${LogFile2}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180208 12:06:48.295" level="INFO">Executing command 'cat /gsbiist/spool/extract/TCG/FromCBS/ZUTBLCOLSPRJ_20180208.log'.</msg>
<msg timestamp="20180208 12:06:48.326" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180208 12:06:48.326" level="INFO">${output} = D|00901||1St Micro Entrepreneurs 901|20180121|20180530|1000000.00|REJECT|Sub Project code invalid format
T|1</msg>
<status status="PASS" endtime="20180208 12:06:48.326" starttime="20180208 12:06:48.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>invalid format</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:48.326" starttime="20180208 12:06:48.326"></status>
</kw>
<kw name="Run SQL ZUTBLCOLSPRJ" library="Keywords">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>dm</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:48.326" starttime="20180208 12:06:48.326"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>D EXPORT^SQLOADER("select PROJCD,SUBCD,DESC,STARTDT,ENDDT,MAXALOC from ZUTBLCOLSPRJ","${TCGPath}/${File2}",0,124,1)</arg>
</arguments>
<msg timestamp="20180208 12:06:48.326" level="INFO">GTM&gt;=H[C$&lt;2&gt;&gt;</msg>
<status status="PASS" endtime="20180208 12:06:48.326" starttime="20180208 12:06:48.326"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until `expected` is encountered.</doc>
<arguments>
<arg>GTM&gt;</arg>
</arguments>
<msg timestamp="20180208 12:06:48.560" level="INFO">cbssitdb:/gsbiist$ dm

GTM&gt;</msg>
<status status="PASS" endtime="20180208 12:06:48.576" starttime="20180208 12:06:48.326"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>H</arg>
</arguments>
<msg timestamp="20180208 12:06:48.763" level="INFO">=D[C$&lt;2&gt; [C$&lt;2&gt;E[C$&lt;2&gt;X[C$&lt;2&gt;P[C$&lt;2&gt;O[C$&lt;2&gt;R[C$&lt;2&gt;T[C$&lt;2&gt;^[C$&lt;2&gt;S[C$&lt;2&gt;Q[C$&lt;2&gt;L[C$&lt;2&gt;O[C$&lt;2&gt;A[C$&lt;2&gt;D[C$&lt;2&gt;E[C$&lt;2&gt;R[C$&lt;2&gt;([C$&lt;2&gt;"[C$&lt;2&gt;s[C$&lt;2&gt;e[C$&lt;2&gt;l[C$&lt;2&gt;e[C$&lt;2&gt;c[C$&lt;2&gt;t[C$&lt;2&gt; [C$&lt;2&gt;P[C$&lt;2&gt;R[C$&lt;2&gt;O[C$&lt;2&gt;J[C$&lt;2&gt;C[C$&lt;2&gt;D[C$&lt;2&gt;,[C$&lt;2&gt;S[C$&lt;2&gt;U[C$&lt;2&gt;B[C$&lt;2&gt;C[C$&lt;2&gt;D[C$&lt;2&gt;,[C$&lt;2&gt;D[C$&lt;2&gt;E[C$&lt;2&gt;S[C$&lt;2&gt;C[C$&lt;2&gt;,[C$&lt;2&gt;S[C$&lt;2&gt;T[C$&lt;2&gt;A[C$&lt;2&gt;R[C$&lt;2&gt;T[C$&lt;2&gt;D[C$&lt;2&gt;T[C$&lt;2&gt;,[C$&lt;2&gt;E[C$&lt;2&gt;N[C$&lt;2&gt;D[C$&lt;2&gt;D[C$&lt;2&gt;T[C$&lt;2&gt;,[C$&lt;2&gt;M[C$&lt;2&gt;A[C$&lt;2&gt;X[C$&lt;2&gt;A[C$&lt;2&gt;L[C$&lt;2&gt;O[C$&lt;2&gt;C[C$&lt;2&gt; [C$&lt;2&gt;f[C$&lt;2&gt;r[C$&lt;2&gt;o[C$&lt;2&gt;m[C$&lt;2&gt; [C$&lt;2&gt;Z[C$&lt;2&gt;U[C$&lt;2&gt;T[C$&lt;2&gt;B[C$&lt;2&gt;L</msg>
<status status="PASS" endtime="20180208 12:06:48.763" starttime="20180208 12:06:48.576"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:48.763" starttime="20180208 12:06:48.326"></status>
</kw>
<kw name="File Should Exist" library="SSHLibrary">
<doc>Fails if the given `path` does NOT point to an existing file.</doc>
<arguments>
<arg>${TCGPath}/${File2}</arg>
</arguments>
<status status="PASS" endtime="20180208 12:06:48.779" starttime="20180208 12:06:48.763"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sed -n '$=' ${TCGPath}/${File2}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180208 12:06:48.779" level="INFO">Executing command 'sed -n '$=' /gsbiist/spool/extract/TCG/ZUTBLCOLSPRJ_20180208.txt'.</msg>
<msg timestamp="20180208 12:06:48.826" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180208 12:06:48.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20180208 12:06:48.826" starttime="20180208 12:06:48.779"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20180208 12:06:48.826" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20180208 12:06:48.826" starttime="20180208 12:06:48.826"></status>
</kw>
<doc>Compare data ZUTBLCOLPRJ include header</doc>
<tags>
<tag>ZUTBLCOLSPRJ</tag>
</tags>
<status status="PASS" endtime="20180208 12:06:48.826" critical="yes" starttime="20180208 12:06:43.002"></status>
</test>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180208 12:06:48.857" starttime="20180208 12:06:48.826"></status>
</kw>
<status status="PASS" endtime="20180208 12:06:48.857" starttime="20180208 12:06:41.207"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">ZUTBLCOLSPRJ</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="TestScenario6" pass="1">TestScenario6</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
